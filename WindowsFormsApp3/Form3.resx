<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>